{"version":3,"file":"static/js/317.3c499b9c.chunk.js","mappings":"+QACMA,EAAkB,SAAC,GAAe,IAE9BC,EAF6B,EAAZC,MAEAC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAA6B,2BACpD,uBAAID,KACJ,uBAAIC,MAFyDF,MAKjE,OAAQ,wBACHH,KAITD,EAAgBO,aAAe,CAC7BL,MAAO,IAaT,QCsBA,EA5CoB,WAChB,OAA0BM,EAAAA,EAAAA,UAAS,CAC/BN,MAAO,GACPO,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAKQR,GAAOS,EAAAA,EAAAA,MAAPT,IAERU,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBH,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdP,SAAS,OAHG,mBAMOQ,EAAAA,EAAAA,IAAgBb,GANvB,OAMNc,EANM,OAOZN,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdd,MAAOgB,EACPT,SAAS,OAVD,gDAaZG,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdP,SAAS,EACTC,MAAK,UAhBG,yDAAH,qDAoBbN,GACNW,MAEC,CAACX,IACF,IAAQF,EAA0BS,EAA1BT,MAAOQ,EAAmBC,EAAnBD,MAAOD,EAAYE,EAAZF,QAE1B,OACE,2BACGA,IAAW,sCACXC,IAAS,4CACTR,EAAMiB,OAAS,GAAI,SAAC,EAAD,CAAiBjB,MAAOA,KAAW,mD,iMC1CvDkB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAELC,EAAU,mCAEHC,EAAiB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SAGnBL,EAASM,IAAI,qBAAsB,CACzCC,OAAQ,CACJC,QAASL,EACTE,KAAAA,KANqB,uBAEjBI,EAFiB,EAEzBX,KAAQW,QAFiB,kBAStBA,GATsB,2CAAH,qDAYjBC,EAAY,mCAAG,WAAO1B,GAAP,yFACDgB,EAASM,IAAT,gBAAsBtB,GAAM,CAC/CuB,OAAQ,CACJC,QAASL,KAHO,uBAChBL,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASZa,EAAY,mCAAG,WAAOC,GAAP,8FAAcP,EAAd,+BAAqB,EAArB,SACDL,EAASM,IAAI,eAAgB,CAChDC,OAAQ,CACJC,QAASL,EACTE,KAAAA,EACAO,MAAAA,KALgB,uBAChBd,EADgB,EAChBA,KADgB,kBAQjBA,GARiB,2CAAH,sDAWZe,EAAe,mCAAG,WAAO7B,GAAP,yFACJgB,EAASM,IAAT,gBAAsBtB,EAAtB,YAAoC,CACvDuB,OAAQ,CACJC,QAASL,KAHU,uBACnBL,EADmB,EACnBA,KADmB,kBAMpBA,EAAKgB,MANe,2CAAH,sDASfjB,EAAe,mCAAG,WAAOb,GAAP,yFACNgB,EAASM,IAAT,gBAAsBtB,EAAtB,YAAoC,CACzDuB,OAAQ,CACNC,QAASL,KAHgB,uBACrBL,EADqB,EACrBA,KADqB,kBAMtBA,EAAKW,SANiB,2CAAH","sources":["pages/ReviewsPage/ReviewsPageItem/ReviewsPageItem.jsx","pages/ReviewsPage/ReviewsPage.jsx","shared/api/services.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nconst ReviewsPageItem = ({ items }) => {\n\n    const elements = items.map(({ id, author, content }) => <li key={id}>\n        <p>{author}</p>\n        <p>{content}</p>\n    </li>);\n\n    return (<ul>\n        {elements}\n        </ul>)\n}\n\nReviewsPageItem.defaultProps = {\n  items: [],\n};\n\nReviewsPageItem.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            author: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })\n    )\n};\n\nexport default ReviewsPageItem;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"shared/api/services\";\nimport ReviewsPageItem from './ReviewsPageItem';\n\nconst ReviewsPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    })\n    const { id } = useParams();\n    \n    useEffect(() => {\n        const fetchMovies = async () => {\n            setState(prevState => ({\n                ...prevState,\n                loading: true,\n            }));\n            try {\n                const data = await getMovieReviews(id);\n                setState(prevState => ({\n                    ...prevState,\n                    items: data,\n                    loading: false,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                    error,\n                }))\n            }\n        }\n        if (id) {\n      fetchMovies();\n    }\n    }, [id]);\n      const { items, error, loading } = state;\n\n  return (\n    <div>\n      {loading && <p>...Loading</p>}\n      {error && <p>Movies not found</p>}\n      {items.length > 0 ? <ReviewsPageItem items={items}/> : <p>Reviews not found </p>}\n    </div>\n  );\n}\n\nexport default ReviewsPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n});\nconst API_KEY = \"1f739ee3b0896acaf022f176c2ecab80\";\n\nexport const getTrendingMovies = async (page = 1) => {\n    const {\n        data: { results },\n    } = await instance.get(\"trending/movie/day\", {\n        params: {\n            api_key: API_KEY,\n            page,\n        },\n    })\n    return results;\n};\n\nexport const getMovieById = async (id) => {\n    const { data } = await instance.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    return data\n};\n\nexport const searchMovies = async (query, page = 1) => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n            api_key: API_KEY,\n            page,\n            query,\n        },\n    });\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["ReviewsPageItem","elements","items","map","id","author","content","defaultProps","useState","loading","error","state","setState","useParams","useEffect","fetchMovies","prevState","getMovieReviews","data","length","instance","axios","baseURL","API_KEY","getTrendingMovies","page","get","params","api_key","results","getMovieById","searchMovies","query","getMovieCredits","cast"],"sourceRoot":""}