{"version":3,"file":"static/js/503.76852138.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.module.css?b5d6","modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","modules/MoviesSearch/MoviesList.module.css","modules/MoviesSearch/MoviesSearch.jsx","pages/SearchPage/SearchPage.jsx","shared/api/services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesSearchForm_form__HHn30\",\"button\":\"MoviesSearchForm_button__EM-dQ\",\"input\":\"MoviesSearchForm_input__zFGEU\"};","import { useState } from \"react\";\nimport s from './MoviesSearchForm.module.css';\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [ state, setState ] = useState({\n        search: \"\",\n    })\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState(p => ({\n            ...p,\n            [name]: value,\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({search: \"\"})\n    }\n\n    const { search } = state;\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <input\n                className={s.input}\n                name=\"search\"\n                value={search}\n                onChange={handleChange}\n                type=\"text\"\n                placeholder=\"Search movies\"\n                required/>\n            <button className={s.button} type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport MoviesSearchForm from './MoviesSearchForm/MoviesSearchForm';\nimport { searchMovies } from \"shared/api/services\";\nimport s from './MoviesList.module.css';\n\n\nconst MoviesSearch = () => {\n\nconst [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    })\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        async function fetchMoviesBySearch() {\n            setState(p => ({\n                ...p, \n                loading: true,\n            }))\n            try {\n                const data = await searchMovies(search);\n                setState(p => ({\n                  ...p,\n                  loading: false,\n                    items: data.results,\n                }))\n            }\n            catch (error) {\n              setState((p) => {\n                return { ...p, loading: false, error };\n              });\n            }\n        }\n      if (search) {\n          fetchMoviesBySearch();\n        }\n    }, [search])\n    \n    const changeSearch = ({ search }) => setSearchParams({search});\n    const { items, error, loading } = state;\n\n      const elements = items.map(({ id, title }) => title !== undefined && <li className={s.item} key={id}>\n         <Link className={s.link} to={`/movies/${id}`}>{ title }</Link>\n    </li>)\n  \n  return (\n    <>\n      <MoviesSearchForm onSubmit={changeSearch} />\n      {loading && <p>...Loading</p>}\n      {error && <p>Movies not found</p>}\n      {items.length > 0 && <ul className={s.list}>{elements}</ul>}\n    </>\n  );\n}\n\nMoviesSearch.defaultProps = {\n  items: [],\n};\n\nMoviesSearch.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesSearch;","import MoviesSearch from '../../modules/MoviesSearch/MoviesSearch';\n\nconst SearchPage = () => {\n    return (\n       \n            <MoviesSearch />\n       \n    )\n}\n\nexport default SearchPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n});\nconst API_KEY = \"1f739ee3b0896acaf022f176c2ecab80\";\n\nexport const getTrendingMovies = async (page = 1) => {\n    const {\n        data: { results },\n    } = await instance.get(\"trending/movie/day\", {\n        params: {\n            api_key: API_KEY,\n            page,\n        },\n    })\n    return results;\n};\n\nexport const getMovieById = async (id) => {\n    const { data } = await instance.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    return data\n};\n\nexport const searchMovies = async (query, page = 1) => {\n    const { data } = await instance.get('search/movie', {\n        params: {\n            api_key: API_KEY,\n            page,\n            query,\n        },\n    });\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["onSubmit","useState","search","state","setState","className","s","e","preventDefault","name","value","onChange","target","p","type","placeholder","required","MoviesSearch","items","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","searchMovies","data","results","fetchMoviesBySearch","elements","map","id","title","undefined","to","length","defaultProps","instance","axios","baseURL","API_KEY","getTrendingMovies","page","params","api_key","getMovieById","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}